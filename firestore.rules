rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /barbers/{barberId} {
      // Qualquer um pode ler o perfil de um barbeiro se estiver completo
      allow read: if resource.data.profileComplete == true || isOwner(barberId);
      // Apenas o barbeiro dono do perfil pode escrever nele
      allow write: if isOwner(barberId);

      // Subcoleção de agendamentos
      match /appointments/{appointmentId} {
        // GET: Um barbeiro pode ler um agendamento da sua agenda.
        // GET: Um cliente pode ler um agendamento que ele mesmo fez.
        allow get: if isOwner(barberId) || isOwner(get(/databases/$(database)/documents/barbers/$(barberId)/appointments/$(appointmentId)).data.clientUid);
        
        // LIST: Um cliente pode listar os agendamentos ONDE o clientUid é o seu.
        // Esta regra é a chave para a consulta collectionGroup funcionar.
        allow list: if request.auth.uid == request.query.get('where')[0][2];
        
        // CREATE: Um cliente pode criar um agendamento para si mesmo.
        allow create: if isOwner(request.resource.data.clientUid);

        // UPDATE, DELETE: Apenas o barbeiro pode alterar/deletar.
        allow update, delete: if isOwner(barberId);
      }
    }

    match /clients/{clientId} {
      // Um cliente só pode ler e escrever no seu próprio perfil.
      allow read, write: if isOwner(clientId);
    }
  }
}